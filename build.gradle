plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'maven-publish'
}

group 'me.devoxin'
version '3.0.0'

repositories {
    maven {
        url 'https://m2.dv8tion.net/releases'
        name 'm2-dv8tion'
    }
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    def kotlinVersion = '1.7.10'
    def coroutinesVersion = '1.6.4'
    def jdaVersion = '5.0.0-alpha.22'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$coroutinesVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation 'org.reflections:reflections:0.10.2'
    compileOnly "net.dv8tion:JDA:$jdaVersion"
    api 'org.slf4j:slf4j-api:1.7.36'

    testImplementation "net.dv8tion:JDA:$jdaVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

String getBuildVersion() {
    def gitVersion = new ByteArrayOutputStream()
    exec {
        commandLine('git', 'rev-parse', '--short', 'HEAD')
        standardOutput = gitVersion
    }
    return "$version\n${gitVersion.toString().trim()}"
}

task writeVersion() {
    def resourcePath = sourceSets.main.resources.srcDirs[0]
    def resources = file(resourcePath)

    if (!resources.exists()) {
        resources.mkdirs()
    }

    file("$resourcePath/flight.txt").text = getBuildVersion()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}

task mavenPublishTask {
    doLast {
        publishToMavenLocal
    }
}

build {
    dependsOn writeVersion
    finalizedBy(mavenPublishTask)
}

shadowJar {
    dependsOn writeVersion
    finalizedBy(mavenPublishTask)
}